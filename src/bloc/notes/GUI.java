/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloc.notes;

import java.awt.Font;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Remi
 */
public class GUI extends javax.swing.JFrame {
    private String file_name;
    private String file_text;
    private BlocNotes bloc_notes;
    private String clipboard;
    private String last_text;
    /**
     * Creates new form GUI
     */
    public GUI(BlocNotes bloc_notes) {
        this.bloc_notes = bloc_notes;
        this.file_text = "";
        initComponents();
    }
    
    public String get_file_name(){
        return this.file_name;
    }

    public void set_text(String text){
        this.file_text = text;
        this.text.setText(text);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        file_chooser_open_jframe = new javax.swing.JFrame();
        file_chooser_open = new javax.swing.JFileChooser();
        file_chooser_save_jframe = new javax.swing.JFrame();
        file_chooser_save = new javax.swing.JFileChooser();
        atteindre_jframe = new javax.swing.JFrame();
        atteindre_input = new javax.swing.JTextField();
        atteindre_bouton = new javax.swing.JButton();
        atteindre_annuler = new javax.swing.JButton();
        label_atteindre = new javax.swing.JLabel();
        rechercher_jframe = new javax.swing.JFrame();
        rechercher_label = new javax.swing.JLabel();
        rechercher_input = new javax.swing.JTextField();
        rechercher_suivant_btn = new javax.swing.JButton();
        rechercher_annuler = new javax.swing.JButton();
        direction_label = new javax.swing.JLabel();
        haut_rb = new javax.swing.JRadioButton();
        bas_rb = new javax.swing.JRadioButton();
        rechercher_casse = new javax.swing.JCheckBox();
        rechercher_retour_ligne = new javax.swing.JCheckBox();
        rechercher_group_rb = new javax.swing.ButtonGroup();
        remplacer_jframe = new javax.swing.JFrame();
        remplacer_label = new javax.swing.JLabel();
        remplacer_input = new javax.swing.JTextField();
        remplacer_suivant_btn1 = new javax.swing.JButton();
        remplacer_annuler1 = new javax.swing.JButton();
        remplacer_casse = new javax.swing.JCheckBox();
        remplacer_retour_ligne = new javax.swing.JCheckBox();
        remplacer_label2 = new javax.swing.JLabel();
        remplacer_input2 = new javax.swing.JTextField();
        remplacer_btn = new javax.swing.JButton();
        remplacer_tout_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fichier_menu = new javax.swing.JMenu();
        nouveau = new javax.swing.JMenuItem();
        nouvelle_fenetre = new javax.swing.JMenuItem();
        ouvrir = new javax.swing.JMenuItem();
        enregistrer = new javax.swing.JMenuItem();
        enregistrer_sous = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        quitter = new javax.swing.JMenuItem();
        edition_menu = new javax.swing.JMenu();
        annuler = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        couper = new javax.swing.JMenuItem();
        copier = new javax.swing.JMenuItem();
        coller = new javax.swing.JMenuItem();
        suppr = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        rechercher = new javax.swing.JMenuItem();
        rechercher_suivant = new javax.swing.JMenuItem();
        rechercher_precedent = new javax.swing.JMenuItem();
        remplacer = new javax.swing.JMenuItem();
        atteindre = new javax.swing.JMenuItem();
        selectionner_tout = new javax.swing.JMenuItem();
        date_heure = new javax.swing.JMenuItem();
        format_menu = new javax.swing.JMenu();
        retour_ligne_auto = new javax.swing.JCheckBoxMenuItem();
        affichage_menu = new javax.swing.JMenu();
        zoom_menu = new javax.swing.JMenu();
        zoom_avant = new javax.swing.JMenuItem();
        zoom_arriere = new javax.swing.JMenuItem();
        zoom_defaut = new javax.swing.JMenuItem();
        barre_etat_check = new javax.swing.JCheckBoxMenuItem();

        file_chooser_open_jframe.setTitle("Ouvrir");
        //cant see directory
        file_chooser_open.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        //can choose only one file
        file_chooser_open.setMultiSelectionEnabled(false);
        //filter for txt files
        file_chooser_open.setFileFilter(new FileNameExtensionFilter("Fichier texte", "txt"));
        file_chooser_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_chooser_openActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout file_chooser_open_jframeLayout = new javax.swing.GroupLayout(file_chooser_open_jframe.getContentPane());
        file_chooser_open_jframe.getContentPane().setLayout(file_chooser_open_jframeLayout);
        file_chooser_open_jframeLayout.setHorizontalGroup(
            file_chooser_open_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
            .addGroup(file_chooser_open_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(file_chooser_open_jframeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser_open, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        file_chooser_open_jframeLayout.setVerticalGroup(
            file_chooser_open_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
            .addGroup(file_chooser_open_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(file_chooser_open_jframeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser_open, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        file_chooser_save_jframe.setTitle("Enregistrer sous");
        file_chooser_save.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        file_chooser_save.setMultiSelectionEnabled(false);
        file_chooser_save.setFileFilter(new FileNameExtensionFilter("Fichier texte", "txt"));

        javax.swing.GroupLayout file_chooser_save_jframeLayout = new javax.swing.GroupLayout(file_chooser_save_jframe.getContentPane());
        file_chooser_save_jframe.getContentPane().setLayout(file_chooser_save_jframeLayout);
        file_chooser_save_jframeLayout.setHorizontalGroup(
            file_chooser_save_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(file_chooser_save_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(file_chooser_save_jframeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        file_chooser_save_jframeLayout.setVerticalGroup(
            file_chooser_save_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(file_chooser_save_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(file_chooser_save_jframeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        atteindre_jframe.setTitle("Atteindre");
        atteindre_jframe.setResizable(false);

        atteindre_input.setText("");
        atteindre_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                atteindre_inputKeyReleased(evt);
            }
        });

        atteindre_bouton.setText("Atteindre");
        atteindre_bouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atteindre_boutonActionPerformed(evt);
            }
        });

        atteindre_annuler.setText("Annuler");
        atteindre_annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atteindre_annulerActionPerformed(evt);
            }
        });

        label_atteindre.setText("Numéro de ligne :");

        javax.swing.GroupLayout atteindre_jframeLayout = new javax.swing.GroupLayout(atteindre_jframe.getContentPane());
        atteindre_jframe.getContentPane().setLayout(atteindre_jframeLayout);
        atteindre_jframeLayout.setHorizontalGroup(
            atteindre_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atteindre_jframeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(atteindre_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, atteindre_jframeLayout.createSequentialGroup()
                        .addGroup(atteindre_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(atteindre_input)
                            .addGroup(atteindre_jframeLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(atteindre_bouton)
                                .addGap(18, 18, 18)
                                .addComponent(atteindre_annuler)))
                        .addGap(15, 15, 15))
                    .addGroup(atteindre_jframeLayout.createSequentialGroup()
                        .addComponent(label_atteindre, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        atteindre_jframeLayout.setVerticalGroup(
            atteindre_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, atteindre_jframeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label_atteindre)
                .addGap(18, 18, 18)
                .addComponent(atteindre_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(atteindre_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atteindre_annuler)
                    .addComponent(atteindre_bouton))
                .addGap(14, 14, 14))
        );

        rechercher_jframe.setTitle("Rechercher");
        rechercher_jframe.setAlwaysOnTop(true);

        rechercher_label.setText("Rechercher :");

        rechercher_suivant_btn.setText("Suivant");
        rechercher_suivant_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercher_suivant_btnActionPerformed(evt);
            }
        });

        rechercher_annuler.setText("Annuler");
        rechercher_annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercher_annulerActionPerformed(evt);
            }
        });

        direction_label.setText("Direction");

        rechercher_group_rb.add(haut_rb);
        haut_rb.setText("Haut");

        rechercher_group_rb.add(bas_rb);
        bas_rb.setSelected(true);
        bas_rb.setText("Bas");

        rechercher_casse.setText("Respecter la casse");

        rechercher_retour_ligne.setText("Retour à la ligne");

        javax.swing.GroupLayout rechercher_jframeLayout = new javax.swing.GroupLayout(rechercher_jframe.getContentPane());
        rechercher_jframe.getContentPane().setLayout(rechercher_jframeLayout);
        rechercher_jframeLayout.setHorizontalGroup(
            rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rechercher_jframeLayout.createSequentialGroup()
                .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rechercher_jframeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rechercher_casse)
                            .addComponent(rechercher_retour_ligne))
                        .addGap(39, 39, 39)
                        .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(haut_rb)
                            .addComponent(direction_label))
                        .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rechercher_jframeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bas_rb))
                            .addGroup(rechercher_jframeLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(rechercher_annuler)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(rechercher_jframeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rechercher_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rechercher_input, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rechercher_suivant_btn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rechercher_jframeLayout.setVerticalGroup(
            rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rechercher_jframeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rechercher_label)
                    .addComponent(rechercher_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rechercher_suivant_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rechercher_annuler)
                    .addComponent(direction_label)
                    .addComponent(rechercher_casse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rechercher_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(haut_rb)
                    .addComponent(bas_rb)
                    .addComponent(rechercher_retour_ligne))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        remplacer_jframe.setTitle("Remplacer");
        remplacer_jframe.setAlwaysOnTop(true);

        remplacer_label.setText("Rechercher :");

        remplacer_suivant_btn1.setText("Suivant");
        remplacer_suivant_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remplacer_suivant_btn1ActionPerformed(evt);
            }
        });

        remplacer_annuler1.setText("Annuler");
        remplacer_annuler1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remplacer_annuler1ActionPerformed(evt);
            }
        });

        remplacer_casse.setText("Respecter la casse");

        remplacer_retour_ligne.setText("Retour à la ligne");

        remplacer_label2.setText("Remplacer par :");

        remplacer_btn.setText("Remplacer");
        remplacer_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remplacer_btnActionPerformed(evt);
            }
        });

        remplacer_tout_btn.setText("Remplacer tout");
        remplacer_tout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remplacer_tout_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout remplacer_jframeLayout = new javax.swing.GroupLayout(remplacer_jframe.getContentPane());
        remplacer_jframe.getContentPane().setLayout(remplacer_jframeLayout);
        remplacer_jframeLayout.setHorizontalGroup(
            remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remplacer_jframeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remplacer_jframeLayout.createSequentialGroup()
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remplacer_label2)
                            .addComponent(remplacer_label))
                        .addGap(18, 18, 18)
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remplacer_input2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remplacer_input, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remplacer_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remplacer_suivant_btn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(remplacer_jframeLayout.createSequentialGroup()
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remplacer_casse)
                            .addComponent(remplacer_retour_ligne))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remplacer_annuler1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remplacer_tout_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        remplacer_jframeLayout.setVerticalGroup(
            remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remplacer_jframeLayout.createSequentialGroup()
                .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remplacer_jframeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(remplacer_label)
                            .addComponent(remplacer_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(remplacer_jframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(remplacer_label2)
                            .addComponent(remplacer_input2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(remplacer_casse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remplacer_retour_ligne))
                    .addGroup(remplacer_jframeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(remplacer_suivant_btn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remplacer_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remplacer_tout_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remplacer_annuler1)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bloc-notes");
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        text.setColumns(20);
        text.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        text.setRows(5);
        text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                textMouseReleased(evt);
            }
        });
        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(text);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        fichier_menu.setText("Fichier");

        nouveau.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        nouveau.setText("Nouveau");
        nouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouveauActionPerformed(evt);
            }
        });
        fichier_menu.add(nouveau);

        nouvelle_fenetre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        nouvelle_fenetre.setText("Nouvelle fenêtre");
        nouvelle_fenetre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouvelle_fenetreActionPerformed(evt);
            }
        });
        fichier_menu.add(nouvelle_fenetre);

        ouvrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ouvrir.setText("Ouvrir...");
        ouvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouvrirActionPerformed(evt);
            }
        });
        fichier_menu.add(ouvrir);

        enregistrer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        enregistrer.setText("Enregistrer");
        enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerActionPerformed(evt);
            }
        });
        fichier_menu.add(enregistrer);

        enregistrer_sous.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        enregistrer_sous.setText("Enregistrer sous...");
        enregistrer_sous.setToolTipText("");
        enregistrer_sous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrer_sousActionPerformed(evt);
            }
        });
        fichier_menu.add(enregistrer_sous);
        fichier_menu.add(jSeparator2);

        quitter.setText("Quitter");
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });
        fichier_menu.add(quitter);

        jMenuBar1.add(fichier_menu);

        edition_menu.setText("Edition");

        annuler.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        annuler.setText("Annuler");
        annuler.setEnabled(false);
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerActionPerformed(evt);
            }
        });
        edition_menu.add(annuler);
        edition_menu.add(jSeparator3);

        couper.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        couper.setText("Couper");
        couper.setEnabled(false);
        couper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                couperActionPerformed(evt);
            }
        });
        edition_menu.add(couper);

        copier.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copier.setText("Copier");
        copier.setEnabled(false);
        copier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copierActionPerformed(evt);
            }
        });
        edition_menu.add(copier);

        coller.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        coller.setText("Coller");
        coller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collerActionPerformed(evt);
            }
        });
        edition_menu.add(coller);

        suppr.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        suppr.setText("Supprimer");
        suppr.setEnabled(false);
        suppr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprActionPerformed(evt);
            }
        });
        edition_menu.add(suppr);
        edition_menu.add(jSeparator4);

        rechercher.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        rechercher.setText("Rechercher");
        rechercher.setEnabled(false);
        rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherActionPerformed(evt);
            }
        });
        edition_menu.add(rechercher);

        rechercher_suivant.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        rechercher_suivant.setText("Rechercher le suivant");
        rechercher_suivant.setEnabled(false);
        rechercher_suivant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercher_suivantActionPerformed(evt);
            }
        });
        edition_menu.add(rechercher_suivant);

        rechercher_precedent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        rechercher_precedent.setText("Rechercher le précédent");
        rechercher_precedent.setEnabled(false);
        rechercher_precedent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercher_precedentActionPerformed(evt);
            }
        });
        edition_menu.add(rechercher_precedent);

        remplacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        remplacer.setText("Remplacer");
        remplacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remplacerActionPerformed(evt);
            }
        });
        edition_menu.add(remplacer);

        atteindre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        atteindre.setText("Atteindre");
        atteindre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atteindreActionPerformed(evt);
            }
        });
        edition_menu.add(atteindre);

        selectionner_tout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        selectionner_tout.setText("Sélectionner tout");
        selectionner_tout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionner_toutActionPerformed(evt);
            }
        });
        edition_menu.add(selectionner_tout);

        date_heure.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        date_heure.setText("Heure/Date");
        date_heure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_heureActionPerformed(evt);
            }
        });
        edition_menu.add(date_heure);

        jMenuBar1.add(edition_menu);

        format_menu.setText("Format");

        retour_ligne_auto.setText("Retour à la ligne automatique");
        retour_ligne_auto.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                retour_ligne_autoStateChanged(evt);
            }
        });
        format_menu.add(retour_ligne_auto);

        jMenuBar1.add(format_menu);

        affichage_menu.setText("Affichage");

        zoom_menu.setText("Zoom");

        zoom_avant.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        zoom_avant.setText("Zoom avant");
        zoom_avant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoom_avantActionPerformed(evt);
            }
        });
        zoom_menu.add(zoom_avant);

        zoom_arriere.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        zoom_arriere.setText("Zoom arrière");
        zoom_arriere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoom_arriereActionPerformed(evt);
            }
        });
        zoom_menu.add(zoom_arriere);

        zoom_defaut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD0, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        zoom_defaut.setText("Restaurer le zoom par défaut");
        zoom_defaut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoom_defautActionPerformed(evt);
            }
        });
        zoom_menu.add(zoom_defaut);

        affichage_menu.add(zoom_menu);

        barre_etat_check.setSelected(true);
        barre_etat_check.setText("Barre d'état");
        affichage_menu.add(barre_etat_check);

        jMenuBar1.add(affichage_menu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouveauActionPerformed
        //if not saved, ask to save
        if(!this.file_text.equals(this.text.getText()) && !this.text.getText().equals("")){
            int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous enregistrer votre fichier avant de créer un nouveau fichier ?", "Bloc-notes", JOptionPane.YES_NO_CANCEL_OPTION);
            if(reponse == JOptionPane.YES_OPTION){
                this.enregistrer.doClick();
                return;
            }else if(reponse == JOptionPane.NO_OPTION){
                //vider text
                this.text.setText("");
            }
            else{
                //cancel
                return;
            }
        }
        //vider text
        this.text.setText("");
        this.file_text = "";
        this.file_name = null;
        this.set_title();
        
    }//GEN-LAST:event_nouveauActionPerformed

    private void annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerActionPerformed
        //switch between last text and current text and select it
        String last_text = this.text.getText();
        this.text.setText(this.file_text);
        this.file_text = last_text;
        this.text.selectAll();
    }//GEN-LAST:event_annulerActionPerformed


    private void ouvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouvrirActionPerformed
        //if not saved, ask to save
        if(!this.file_text.equals(this.text.getText()) && !this.text.getText().equals("")){
            int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous enregistrer votre fichier avant d'ouvrir un nouveau fichier ?", "Bloc-notes", JOptionPane.YES_NO_CANCEL_OPTION);
            if(reponse == JOptionPane.YES_OPTION){
                this.enregistrer.doClick();
            }else if(reponse == JOptionPane.NO_OPTION){
                //vider le text
                this.text.setText("");
                file_chooser_open_jframe.pack();
                file_chooser_open_jframe.setLocationRelativeTo(null);
                file_chooser_open_jframe.setVisible(true);
            }
            else{
                //cancel
                return;
            }
        }
        file_chooser_open_jframe.pack();
        file_chooser_open_jframe.setLocationRelativeTo(null);
        file_chooser_open_jframe.setVisible(true);
    }//GEN-LAST:event_ouvrirActionPerformed

    private void file_chooser_openActionPerformed(java.awt.event.ActionEvent evt){                                             
        //if button "annuler" is clicked
        if(evt.getActionCommand().equals(javax.swing.JFileChooser.CANCEL_SELECTION)){
            file_chooser_open_jframe.dispose();
            return;
        }
        this.file_name = file_chooser_open.getSelectedFile().getAbsolutePath();
        this.set_title();
        if(file_chooser_open.getSelectedFile() == null){
            file_chooser_open_jframe.dispose();
            return;
        }
        bloc_notes.openFile(this.file_name);
        file_chooser_open_jframe.dispose();
        
    }                                           

    private void nouvelle_fenetreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouvelle_fenetreActionPerformed
        //init a new BlocNotes window
        BlocNotes new_bloc_notes = new BlocNotes();
    }//GEN-LAST:event_nouvelle_fenetreActionPerformed

    private void enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerActionPerformed
        if(this.file_name == null){
            //launch enregistrer_sous
            this.enregistrer_sous.doClick();
        }else{
            //save file
            this.file_text = this.text.getText();
            this.bloc_notes.enregistrer(this.text.getText(),this.file_name);
        }
        this.set_title();
    }//GEN-LAST:event_enregistrerActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        //close the jFrame
        this.close_window();
        
    }//GEN-LAST:event_quitterActionPerformed

    private void enregistrer_sousActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_enregistrer_sousActionPerformed
        //open file chooser to get file path
        file_chooser_save.setDialogTitle("Enregistrer sous");
        file_chooser_save.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file_chooser_save.setAcceptAllFileFilterUsed(false);
        file_chooser_save.setFileFilter(new FileNameExtensionFilter("Fichier texte", "txt"));
        file_chooser_save.showSaveDialog(this);
        if(file_chooser_save.getSelectedFile() == null){
            file_chooser_open_jframe.dispose();
            return;
        }
        String temp_file_name = file_chooser_save.getSelectedFile().getAbsolutePath() + ".txt";
        if(this.bloc_notes.enregistrer_sous(this.text.getText(),temp_file_name) == true){
            this.file_text = this.text.getText();
            this.file_name = temp_file_name;
            this.set_title();
        }
        file_chooser_open_jframe.dispose();
    }//GEN-LAST:event_enregistrer_sousActionPerformed

    private void textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textKeyReleased
        this.set_title();
        //if the text is not empty, enable rechercher button, rechercher_suivant button and rechercher_precedent button
        if(!this.text.getText().equals("")){
            this.rechercher.setEnabled(true);
            this.rechercher_suivant.setEnabled(true);
            this.rechercher_precedent.setEnabled(true);
        }else{
            this.rechercher.setEnabled(false);
            this.rechercher_suivant.setEnabled(false);
            this.rechercher_precedent.setEnabled(false);
        }

        if(!this.text.getText().equals(this.file_text)){
            this.annuler.setEnabled(true);
        }else{
            this.annuler.setEnabled(false);
        }        
    }//GEN-LAST:event_textKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.close_window();
    }//GEN-LAST:event_formWindowClosing

    private void retour_ligne_autoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_retour_ligne_autoStateChanged
        //if auto line return is checked, set the text to auto line return (linewrap)
        if(this.retour_ligne_auto.isSelected()){
            this.text.setLineWrap(true);
        }else{
            this.text.setLineWrap(false);
        }
    }//GEN-LAST:event_retour_ligne_autoStateChanged

    private void selectionner_toutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionner_toutActionPerformed
        this.text.selectAll();
    }//GEN-LAST:event_selectionner_toutActionPerformed

    private void date_heureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_heureActionPerformed
        LocalDateTime currentTime = LocalDateTime.now();
        String time_stamp = currentTime.format(DateTimeFormatter.ofPattern("HH:mm dd/MM/yyyy"));
        this.text.append(time_stamp);  
        this.set_title();      
    }//GEN-LAST:event_date_heureActionPerformed

    private void zoom_avantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoom_avantActionPerformed
        //increase font size of text (max : 60)
        if(this.text.getFont().getSize() < 60){
            this.text.setFont(new Font(this.text.getFont().getName(),this.text.getFont().getStyle(),this.text.getFont().getSize() + 2));
        }

    }//GEN-LAST:event_zoom_avantActionPerformed

    private void zoom_arriereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoom_arriereActionPerformed
        //decrease font size of text (min : 5)
        if(this.text.getFont().getSize() > 5){
            this.text.setFont(new Font(this.text.getFont().getName(),this.text.getFont().getStyle(),this.text.getFont().getSize() - 2));
        }
    }//GEN-LAST:event_zoom_arriereActionPerformed

    private void zoom_defautActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoom_defautActionPerformed
        this.text.setFont(new Font(this.text.getFont().getName(),this.text.getFont().getStyle(),20));
    }//GEN-LAST:event_zoom_defautActionPerformed

    private void atteindreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atteindreActionPerformed
        //open this.atteindre_window
        this.atteindre_jframe.pack();
        //put the window in the middle of Jframe
        this.atteindre_jframe.setLocationRelativeTo(this);

        this.atteindre_jframe.setVisible(true);

    }//GEN-LAST:event_atteindreActionPerformed

    private void atteindre_annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atteindre_annulerActionPerformed
        this.atteindre_jframe.dispose();
    }//GEN-LAST:event_atteindre_annulerActionPerformed

    private void atteindre_boutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atteindre_boutonActionPerformed
        //get the line number from the text field
        int line_number = Integer.parseInt(this.atteindre_input.getText());
        //set the cursor to the line number
        try {
            this.text.setCaretPosition(this.text.getLineStartOffset(line_number - 1));
            this.atteindre_jframe.dispose();
        } catch (BadLocationException e) {
            //if the line number is not valid, show an error message
            JOptionPane.showMessageDialog(this, "Le numéro de ligne dépasse le nombre total de lignes", "Bloc-notes - Aller à la ligne", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_atteindre_boutonActionPerformed

    private void atteindre_inputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_atteindre_inputKeyReleased
        String text = ((JTextField) this.atteindre_input).getText();
        try {
            Integer.parseInt(text);
        } catch (NumberFormatException e) {
            if(text.equals("")){
                this.atteindre_input.setText("");
            }else{
                JOptionPane.showMessageDialog(this, "Le numéro de ligne doit être un nombre entier", "Bloc-notes - Aller à la ligne", JOptionPane.ERROR_MESSAGE);
                this.atteindre_input.setText(text.substring(0, text.length() - 1));
            }
        }
    }//GEN-LAST:event_atteindre_inputKeyReleased

    private void rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherActionPerformed
        //open this.rechercher_window
        this.rechercher_jframe.pack();
        //put the window in the middle of Jframe
        this.rechercher_jframe.setLocationRelativeTo(this);
        this.rechercher_jframe.setVisible(true);
    }//GEN-LAST:event_rechercherActionPerformed

    private void rechercher_suivant_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercher_suivant_btnActionPerformed
        this.rechercher();
    }//GEN-LAST:event_rechercher_suivant_btnActionPerformed

    private void rechercher_annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercher_annulerActionPerformed
        this.rechercher_jframe.dispose();
    }//GEN-LAST:event_rechercher_annulerActionPerformed

    private void rechercher_suivantActionPerformed(java.awt.event.ActionEvent evt) {
//GEN-FIRST:event_rechercher_suivantActionPerformed
        this.rechercher_suivant(this.rechercher_input.getText(), this.rechercher_casse.isSelected(), this.rechercher_retour_ligne.isSelected());
    }//GEN-LAST:event_rechercher_suivantActionPerformed

    private void rechercher_precedentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercher_precedentActionPerformed
        this.rechercher_precedent(this.rechercher_input.getText(), this.rechercher_casse.isSelected(), this.rechercher_retour_ligne.isSelected());
    }//GEN-LAST:event_rechercher_precedentActionPerformed

    private void remplacer_suivant_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remplacer_suivant_btn1ActionPerformed
        this.rechercher_suivant(this.remplacer_input.getText(), this.remplacer_casse.isSelected(), this.remplacer_retour_ligne.isSelected());
    }//GEN-LAST:event_remplacer_suivant_btn1ActionPerformed

    private void remplacer_annuler1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remplacer_annuler1ActionPerformed
        this.remplacer_jframe.dispose();
    }//GEN-LAST:event_remplacer_annuler1ActionPerformed

    private void remplacer_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remplacer_btnActionPerformed
        String replace = this.remplacer_input2.getText();
        //if no text is selected, launch this.rechercher_suivant()
        if(this.text.getSelectedText() == null){
            this.rechercher_suivant(this.remplacer_input.getText(), this.remplacer_casse.isSelected(), this.remplacer_retour_ligne.isSelected());

        }else{
            //replace the text
            this.text.replaceSelection(replace);
            //launch this.rechercher_suivant()
            this.rechercher_suivant(this.remplacer_input.getText(), this.remplacer_casse.isSelected(), this.remplacer_retour_ligne.isSelected());
        }

    }//GEN-LAST:event_remplacer_btnActionPerformed

    private void remplacer_tout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remplacer_tout_btnActionPerformed
        //replace all occurences of this.remplacer_input.getText() with this.remplacer_input2.getText()
        this.text.setText(this.text.getText().replaceAll(this.remplacer_input.getText(), this.remplacer_input2.getText()));
    }//GEN-LAST:event_remplacer_tout_btnActionPerformed

    private void remplacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remplacerActionPerformed
        //open remplacer_jframe
        this.remplacer_jframe.pack();
        //put the window in the middle of Jframe
        this.remplacer_jframe.setLocationRelativeTo(this);
        this.remplacer_jframe.setVisible(true);
    }//GEN-LAST:event_remplacerActionPerformed

    private void textMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMouseReleased
        //check if some text is selected
        if(this.text.getSelectedText() != null){
            //enable the buttons
            this.suppr.setEnabled(true);
            this.copier.setEnabled(true);
            this.couper.setEnabled(true);
        } 
        else {
            //disable the buttons
            this.suppr.setEnabled(false);
            this.copier.setEnabled(false);
            this.couper.setEnabled(false);
        }
    }//GEN-LAST:event_textMouseReleased

    private void supprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprActionPerformed
        //delete the selected text
        this.text.replaceSelection("");
    }//GEN-LAST:event_supprActionPerformed

    private void copierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copierActionPerformed
        //copy the selected text
        this.clipboard = this.text.getSelectedText();
    }//GEN-LAST:event_copierActionPerformed

    private void collerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collerActionPerformed
        //paste the content of the clipboard at the cursor
        this.text.insert(this.clipboard, this.text.getCaretPosition());
    }//GEN-LAST:event_collerActionPerformed

    private void couperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_couperActionPerformed
        //copy the selected text and delete it
        this.clipboard = this.text.getSelectedText();
        this.text.replaceSelection("");
    }//GEN-LAST:event_couperActionPerformed

    public void set_title(){
        //get only the title of the file in this.file_name
        String file_name_title;
        try{
            String[] file_name_split = this.file_name.split("\\\\");
            file_name_title = file_name_split[file_name_split.length - 1];
            if(!this.text.getText().equals(this.file_text)){
                setTitle("*" +file_name_title + " - Bloc-notes");
            }
            else{
                
                setTitle(file_name_title + " - Bloc-notes");
            }
        }
        catch(NullPointerException e){
            //no file for the moment
            file_name_title = "Sans titre";
            if(!this.text.getText().equals("") && this.file_name == null){
                setTitle("*" + file_name_title + " - Bloc-notes");
            }else{
                setTitle(file_name_title + " - Bloc-notes");
            }
        }
    }

    public void close_window(){
        //if not saved, ask to save
        if(!this.file_text.equals(this.text.getText()) && !this.text.getText().equals("")){
            int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous enregistrer votre fichier avant de fermer la fenêtre ?", "Bloc-notes", JOptionPane.YES_NO_CANCEL_OPTION);
            if(reponse == JOptionPane.YES_OPTION){
                this.enregistrer.doClick();
            }else if(reponse == JOptionPane.NO_OPTION){
                this.setDefaultCloseOperation(EXIT_ON_CLOSE);
            }
            else{
                this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                return;
            }
        }
    }

    public void rechercher_suivant(String text, boolean casse, boolean retour_ligne){
        int index = 0;
        //check if the text contains the searched text
        if(!this.text.getText().contains(text)){
            String recherche = "";
            if(this.rechercher_jframe.isVisible()){
                recherche = this.rechercher_input.getText();
                this.rechercher_jframe.setAlwaysOnTop(false);
            }
            else{
                recherche = this.remplacer_input.getText();
                this.remplacer_jframe.setAlwaysOnTop(false);
            }
            JOptionPane.showMessageDialog(this, "Impossible de trouver " + "'" + recherche + "'", "Bloc-notes - Rechercher", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!casse){
            index = this.text.getText().toLowerCase().indexOf(text.toLowerCase(), this.text.getCaretPosition());
        }
        else{
            index = this.text.getText().indexOf(text, this.text.getCaretPosition());
        }

        if(index != -1){
            this.text.setCaretPosition(index);
            this.text.select(index, index + text.length());
        }else if (!retour_ligne){
            String recherche = "";
            if(this.rechercher_jframe.isVisible()){
                recherche = this.rechercher_input.getText();
                this.rechercher_jframe.setAlwaysOnTop(false);
            }
            else{
                recherche = this.remplacer_input.getText();
                this.remplacer_jframe.setAlwaysOnTop(false);
            }
            JOptionPane.showMessageDialog(this, "Impossible de trouver " + "'" + recherche + "'", "Bloc-notes - Rechercher", JOptionPane.ERROR_MESSAGE);
        }
        else{
            //go to the beginning of the text
            this.text.setCaretPosition(0);
        }


        this.rechercher_jframe.setAlwaysOnTop(true);
        this.remplacer_jframe.setAlwaysOnTop(true);
    }

    public void rechercher_precedent(String text, boolean casse, boolean retour_ligne){
        int index = 0;
        String recherche = this.rechercher_input.getText();
        String sous_texte;
        //remove the text after the cursor
        try{
            sous_texte = this.text.getText().substring(0,this.text.getCaretPosition()  - 1);
        }
        catch(StringIndexOutOfBoundsException e){
            this.rechercher_jframe.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(this, "Impossible de trouver " + "'" + recherche + "'", "Bloc-notes - Rechercher", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //search in the text before the cursor
        if(!casse){
            index = sous_texte.toLowerCase().lastIndexOf(text.toLowerCase());
        }
        else{
            index = sous_texte.lastIndexOf(text);
        }

        if(index != -1){
            this.text.setCaretPosition(index);
            this.text.select(index, index + text.length() );
        }else if (!retour_ligne){
            this.rechercher_jframe.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(this, "Impossible de trouver " + "'" + recherche + "'", "Bloc-notes - Rechercher", JOptionPane.ERROR_MESSAGE);
        }
        else{
            //set the caret after the text
            this.text.setCaretPosition(this.text.getText().length());
        }

        this.rechercher_jframe.setAlwaysOnTop(true);
    }

    public void rechercher(){
        boolean bas = this.bas_rb.isSelected();
        if(bas){
            this.rechercher_suivant(this.rechercher_input.getText(), this.rechercher_casse.isSelected(), this.rechercher_retour_ligne.isSelected());
        }
        else{
            this.rechercher_precedent(this.rechercher_input.getText(), this.rechercher_casse.isSelected(), this.rechercher_retour_ligne.isSelected());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu affichage_menu;
    private javax.swing.JMenuItem annuler;
    private javax.swing.JMenuItem atteindre;
    private javax.swing.JButton atteindre_annuler;
    private javax.swing.JButton atteindre_bouton;
    private javax.swing.JTextField atteindre_input;
    private javax.swing.JFrame atteindre_jframe;
    private javax.swing.JCheckBoxMenuItem barre_etat_check;
    private javax.swing.JRadioButton bas_rb;
    private javax.swing.JMenuItem coller;
    private javax.swing.JMenuItem copier;
    private javax.swing.JMenuItem couper;
    private javax.swing.JMenuItem date_heure;
    private javax.swing.JLabel direction_label;
    private javax.swing.JMenu edition_menu;
    private javax.swing.JMenuItem enregistrer;
    private javax.swing.JMenuItem enregistrer_sous;
    private javax.swing.JMenu fichier_menu;
    private javax.swing.JFileChooser file_chooser_open;
    private javax.swing.JFrame file_chooser_open_jframe;
    private javax.swing.JFileChooser file_chooser_save;
    private javax.swing.JFrame file_chooser_save_jframe;
    private javax.swing.JMenu format_menu;
    private javax.swing.JRadioButton haut_rb;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JLabel label_atteindre;
    private javax.swing.JMenuItem nouveau;
    private javax.swing.JMenuItem nouvelle_fenetre;
    private javax.swing.JMenuItem ouvrir;
    private javax.swing.JMenuItem quitter;
    private javax.swing.JMenuItem rechercher;
    private javax.swing.JButton rechercher_annuler;
    private javax.swing.JCheckBox rechercher_casse;
    private javax.swing.ButtonGroup rechercher_group_rb;
    private javax.swing.JTextField rechercher_input;
    private javax.swing.JFrame rechercher_jframe;
    private javax.swing.JLabel rechercher_label;
    private javax.swing.JMenuItem rechercher_precedent;
    private javax.swing.JCheckBox rechercher_retour_ligne;
    private javax.swing.JMenuItem rechercher_suivant;
    private javax.swing.JButton rechercher_suivant_btn;
    private javax.swing.JMenuItem remplacer;
    private javax.swing.JButton remplacer_annuler1;
    private javax.swing.JButton remplacer_btn;
    private javax.swing.JCheckBox remplacer_casse;
    private javax.swing.JTextField remplacer_input;
    private javax.swing.JTextField remplacer_input2;
    private javax.swing.JFrame remplacer_jframe;
    private javax.swing.JLabel remplacer_label;
    private javax.swing.JLabel remplacer_label2;
    private javax.swing.JCheckBox remplacer_retour_ligne;
    private javax.swing.JButton remplacer_suivant_btn1;
    private javax.swing.JButton remplacer_tout_btn;
    private javax.swing.JCheckBoxMenuItem retour_ligne_auto;
    private javax.swing.JMenuItem selectionner_tout;
    private javax.swing.JMenuItem suppr;
    private javax.swing.JTextArea text;
    private javax.swing.JMenuItem zoom_arriere;
    private javax.swing.JMenuItem zoom_avant;
    private javax.swing.JMenuItem zoom_defaut;
    private javax.swing.JMenu zoom_menu;
    // End of variables declaration//GEN-END:variables
}
