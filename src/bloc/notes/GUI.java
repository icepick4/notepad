/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloc.notes;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Remi
 */
public class GUI extends javax.swing.JFrame {
    private String file_name;
    private String file_text;
    private boolean not_saved;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }
    
    
    public String get_file_name(){
        return this.file_name;
    }

    public void set_text(String text){
        this.file_text = text;
        this.text.setText(text);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        file_chooser = new javax.swing.JFileChooser();
        jFrame2 = new javax.swing.JFrame();
        file_chooser_save = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fichier_menu = new javax.swing.JMenu();
        nouveau = new javax.swing.JMenuItem();
        nouvelle_fenetre = new javax.swing.JMenuItem();
        ouvrir = new javax.swing.JMenuItem();
        enregistrer = new javax.swing.JMenuItem();
        enregistrer_sous = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        quitter = new javax.swing.JMenuItem();
        edition_menu = new javax.swing.JMenu();
        annuler = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        couper = new javax.swing.JMenuItem();
        copier = new javax.swing.JMenuItem();
        coller = new javax.swing.JMenuItem();
        suppr = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        rechercher = new javax.swing.JMenuItem();
        rechercher_suivant = new javax.swing.JMenuItem();
        rechercher_precedent = new javax.swing.JMenuItem();
        remplacer = new javax.swing.JMenuItem();
        atteindre = new javax.swing.JMenuItem();
        selectionner_tout = new javax.swing.JMenuItem();
        date_heure = new javax.swing.JMenuItem();
        format_menu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        affichage_menu = new javax.swing.JMenu();
        zoom_menu = new javax.swing.JMenu();
        zoom_avant = new javax.swing.JMenuItem();
        zoom_arriere = new javax.swing.JMenuItem();
        zoom_defaut = new javax.swing.JMenuItem();
        barre_etat_check = new javax.swing.JCheckBoxMenuItem();

        file_chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_chooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
            .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
            .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(file_chooser_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Bloc-notes");
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        text.setColumns(20);
        text.setRows(5);
        text.setPreferredSize(new java.awt.Dimension(800, 6));
        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(text);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        fichier_menu.setText("Fichier");

        nouveau.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        nouveau.setText("Nouveau");
        nouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouveauActionPerformed(evt);
            }
        });
        fichier_menu.add(nouveau);

        nouvelle_fenetre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        nouvelle_fenetre.setText("Nouvelle fenÃªtre");
        nouvelle_fenetre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouvelle_fenetreActionPerformed(evt);
            }
        });
        fichier_menu.add(nouvelle_fenetre);

        ouvrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ouvrir.setText("Ouvrir...");
        ouvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouvrirActionPerformed(evt);
            }
        });
        fichier_menu.add(ouvrir);

        enregistrer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        enregistrer.setText("Enregistrer");
        enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerActionPerformed(evt);
            }
        });
        fichier_menu.add(enregistrer);

        enregistrer_sous.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        enregistrer_sous.setText("Enregistrer sous...");
        enregistrer_sous.setToolTipText("");
        enregistrer_sous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrer_sousActionPerformed(evt);
            }
        });
        fichier_menu.add(enregistrer_sous);
        fichier_menu.add(jSeparator2);

        quitter.setText("Quitter");
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });
        fichier_menu.add(quitter);

        jMenuBar1.add(fichier_menu);

        edition_menu.setText("Edition");

        annuler.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        annuler.setText("Annuler");
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerActionPerformed(evt);
            }
        });
        edition_menu.add(annuler);
        edition_menu.add(jSeparator3);

        couper.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        couper.setText("Couper");
        edition_menu.add(couper);

        copier.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copier.setText("Copier");
        edition_menu.add(copier);

        coller.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        coller.setText("Coller");
        edition_menu.add(coller);

        suppr.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        suppr.setText("Supprimer");
        edition_menu.add(suppr);
        edition_menu.add(jSeparator4);

        rechercher.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        rechercher.setText("Rechercher");
        edition_menu.add(rechercher);

        rechercher_suivant.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        rechercher_suivant.setText("Rechercher le suivant");
        edition_menu.add(rechercher_suivant);

        rechercher_precedent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        rechercher_precedent.setText("Rechercher le prÃ©cÃ©dent");
        edition_menu.add(rechercher_precedent);

        remplacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        remplacer.setText("Remplacer");
        edition_menu.add(remplacer);

        atteindre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        atteindre.setText("Atteindre");
        edition_menu.add(atteindre);

        selectionner_tout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        selectionner_tout.setText("SÃ©lectionner tout");
        edition_menu.add(selectionner_tout);

        date_heure.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        date_heure.setText("Heure/Date");
        edition_menu.add(date_heure);

        jMenuBar1.add(edition_menu);

        format_menu.setText("Format");

        jMenuItem1.setText("Retour automatique Ã  la ligne");
        format_menu.add(jMenuItem1);

        jMenuBar1.add(format_menu);

        affichage_menu.setText("Affichage");

        zoom_menu.setText("Zoom");

        zoom_avant.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        zoom_avant.setText("Zoom avant");
        zoom_menu.add(zoom_avant);

        zoom_arriere.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        zoom_arriere.setText("Zoom arriÃ¨re");
        zoom_menu.add(zoom_arriere);

        zoom_defaut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD0, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        zoom_defaut.setText("Restaurer le zoom par dÃ©faut");
        zoom_menu.add(zoom_defaut);

        affichage_menu.add(zoom_menu);

        barre_etat_check.setSelected(true);
        barre_etat_check.setText("Barre d'Ã©tat");
        affichage_menu.add(barre_etat_check);

        jMenuBar1.add(affichage_menu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouveauActionPerformed
        //if not saved, ask to save
        if(this.file_text != this.text.getText() && !this.text.getText().equals("")){
            int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous enregistrer votre fichier avant de crÃ©er un nouveau fichier ?", "Enregistrer", JOptionPane.YES_NO_CANCEL_OPTION);
            if(reponse == JOptionPane.YES_OPTION){
                this.enregistrer.doClick();
            }else if(reponse == JOptionPane.NO_OPTION){
                //vider text
                this.text.setText("");
            }
            else{
                //cancel
                return;
            }
        }
        //vider text
        this.text.setText("");
        this.file_text = "";
    }//GEN-LAST:event_nouveauActionPerformed

    private void annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annulerActionPerformed

    private void ouvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouvrirActionPerformed
        // TODO add your handling code here:
        jFrame1.pack();
        jFrame1.setVisible(true);
    }//GEN-LAST:event_ouvrirActionPerformed

    private void file_chooserActionPerformed(java.awt.event.ActionEvent evt){                                             
        //check if button cancel is clicked or open button is clicked
        this.file_name = file_chooser.getSelectedFile().getAbsolutePath();
        this.set_title();
        if(file_chooser.getSelectedFile() == null){
            jFrame1.dispose();
            return;
        }
        BlocNotes.openFile(this.file_name);
        jFrame1.dispose();
        
    }                                           

    private void nouvelle_fenetreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouvelle_fenetreActionPerformed
        //init a new BlocNotes window
        GUI new_gui = new GUI();
        new_gui.setVisible(true);
    }//GEN-LAST:event_nouvelle_fenetreActionPerformed

    private void enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerActionPerformed
        if(this.file_name == null){
            //launch enregistrer_sous
            this.enregistrer_sous.doClick();
        }else{
            //save file
            BlocNotes.save_existing_file(this.text.getText(),this.file_name);
        }
        this.set_title();
    }//GEN-LAST:event_enregistrerActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        //close the jFrame
        this.close_window();
        
    }//GEN-LAST:event_quitterActionPerformed

    private void enregistrer_sousActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_enregistrer_sousActionPerformed
        //open file chooser to get file path
        file_chooser_save.setDialogTitle("Enregistrer sous");
        file_chooser_save.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file_chooser_save.setAcceptAllFileFilterUsed(false);
        file_chooser_save.setFileFilter(new FileNameExtensionFilter("Fichier texte", "txt"));
        file_chooser_save.showSaveDialog(this);
        this.file_name = file_chooser_save.getSelectedFile().getAbsolutePath();
        this.set_title();
        if(file_chooser_save.getSelectedFile() == null){
            jFrame1.dispose();
            return;
        }
        BlocNotes.save_existing_file(this.text.getText(),this.file_name + ".txt");
        jFrame1.dispose();
    }//GEN-LAST:event_enregistrer_sousActionPerformed

    private void textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textKeyReleased
        this.set_title();
    }//GEN-LAST:event_textKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.close_window();
    }//GEN-LAST:event_formWindowClosing

    public void set_title(){
        //check if the text is empty
        if(!this.text.getText().equals("") && this.file_name == null){
            setTitle("*Sans titre - Bloc-notes");
        }else if(this.file_name != null){
            if(!this.text.getText().equals(this.file_text)){
                setTitle("*" +this.file_name + ".txt" + " - Bloc-notes");
            }
            else{
                setTitle(this.file_name + " - Bloc-notes");
            }
        }else{
            setTitle("Sans titre - Bloc-notes");
        }
    }

    public void close_window(){
        if(this.file_text != this.text.getText() && !this.text.getText().equals("")){
            int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous enregistrer votre fichier avant de fermer la fenÃªtre ?", "Bloc-notes", JOptionPane.YES_NO_CANCEL_OPTION);
            if(reponse == JOptionPane.YES_OPTION){
                this.enregistrer.doClick();
            }else if(reponse == JOptionPane.NO_OPTION){
                //close the window
                System.gc();
                this.dispose();
            }
            else{
                return;
            }
        }
        System.gc();
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu affichage_menu;
    private javax.swing.JMenuItem annuler;
    private javax.swing.JMenuItem atteindre;
    private javax.swing.JCheckBoxMenuItem barre_etat_check;
    private javax.swing.JMenuItem coller;
    private javax.swing.JMenuItem copier;
    private javax.swing.JMenuItem couper;
    private javax.swing.JMenuItem date_heure;
    private javax.swing.JMenu edition_menu;
    private javax.swing.JMenuItem enregistrer;
    private javax.swing.JMenuItem enregistrer_sous;
    private javax.swing.JMenu fichier_menu;
    private javax.swing.JFileChooser file_chooser;
    private javax.swing.JFileChooser file_chooser_save;
    private javax.swing.JMenu format_menu;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JMenuItem nouveau;
    private javax.swing.JMenuItem nouvelle_fenetre;
    private javax.swing.JMenuItem ouvrir;
    private javax.swing.JMenuItem quitter;
    private javax.swing.JMenuItem rechercher;
    private javax.swing.JMenuItem rechercher_precedent;
    private javax.swing.JMenuItem rechercher_suivant;
    private javax.swing.JMenuItem remplacer;
    private javax.swing.JMenuItem selectionner_tout;
    private javax.swing.JMenuItem suppr;
    private javax.swing.JTextArea text;
    private javax.swing.JMenuItem zoom_arriere;
    private javax.swing.JMenuItem zoom_avant;
    private javax.swing.JMenuItem zoom_defaut;
    private javax.swing.JMenu zoom_menu;
    // End of variables declaration//GEN-END:variables
}
